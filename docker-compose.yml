version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: zervios-mongodb
    restart: unless-stopped
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-zervios}
    networks:
      - zervios-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Payload CMS Backend
  payload:
    build:
      context: ./src/payload
      dockerfile: Dockerfile
    container_name: zervios-payload
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./src/payload:/app/src
      - payload_media:/app/media
    environment:
      - PAYLOAD_SECRET=${PAYLOAD_SECRET}
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE:-zervios}
      - PAYLOAD_PUBLIC_SERVER_URL=${PAYLOAD_PUBLIC_SERVER_URL}
      - NODE_ENV=${NODE_ENV:-development}
      - PAYLOAD_SEED=${PAYLOAD_SEED:-false}
    ports:
      - "${PAYLOAD_PORT:-3000}:3000"
    networks:
      - zervios-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Next.js Frontend
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    container_name: zervios-frontend
    depends_on:
      payload:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./src/frontend:/app
    environment:
      - NEXT_PUBLIC_PAYLOAD_URL=${NEXT_PUBLIC_PAYLOAD_URL}
      - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL}
      - NODE_ENV=${NODE_ENV:-development}
    ports:
      - "${FRONTEND_PORT:-3001}:3001"
    networks:
      - zervios-network

  # Redis (Optional)
  redis:
    image: redis:7.0-alpine
    container_name: zervios-redis
    restart: unless-stopped
    command: >
      --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - zervios-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  zervios-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  payload_media:
    driver: local
  redis_data:
    driver: local